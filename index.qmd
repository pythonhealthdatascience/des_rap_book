---
title: Welcome
authors:
  - name: Ms Amy Heather
    url: https://github.com/amyheather
    orcid: 0000-0002-6596-3479
    affiliation: Peninsula Collaboration for Health Operational Research and Data Science (PenCHORD), University of Exeter Medical School
date: last-modified
---

This book is a step-by-step guide to writing reproducible discrete-event simulation models in Python and R. It guides you through creating these models whilst meeting reproducibility requirements from:

* 🌿 [Heather et al. 2025](https://doi.org/10.48550/arXiv.2501.13137) "On the reproducibility of discrete-event simulation studies in health research: an empirical study using open models"
* 🏥 The ["Levels of RAP" framework](https://nhsdigital.github.io/rap-community-of-practice/introduction_to_RAP/levels_of_RAP/) from the NHS RAP Community of Practice 

## Introduction {.unnumbered}

### RAP {.unnumbered}

### FOSS, Python and R {.unnumbered}

🏥 "Data produced by code in an open-source language (e.g., Python, R, SQL)."

## Setup {.unnumbered}

### Version control {.unnumbered}

🏥 "Code is version controlled (see [Git basics](https://nhsdigital.github.io/rap-community-of-practice/training_resources/git/introduction-to-git/) and [using Git collaboratively](https://nhsdigital.github.io/rap-community-of-practice/training_resources/git/using-git-collaboratively/) guides)."

### Environment {.unnumbered}

🌿 "List dependencies and versions"

🏥 "Repository includes dependency information (e.g. [requirements.txt](https://pip.pypa.io/en/stable/user_guide/#requirements-files), [PipFile](https://github.com/pypa/pipfile/blob/main/README.rst), [environment.yml](https://nhsdigital.github.io/rap-community-of-practice/training_resources/python/virtual-environments/conda/))."

### Package {.unnumbered}

🏥 "Code is well-organised following [standard directory format](https://nhsdigital.github.io/rap-community-of-practice/training_resources/python/project-structure-and-packaging/)."

🏥 "Code is fully [packaged](https://packaging.python.org/en/latest/)."

### Structuring code {.unnumbered}

🌿 "Minimise code duplication"

🏥 "[Reusable functions](https://nhsdigital.github.io/rap-community-of-practice/training_resources/python/python-functions/) and/or classes are used where appropriate."

## Model {.unnumbered}

### Parameters {.unnumbered}

🌿 "Avoid hard-coded parameters"

### Distributions {.unnumbered}

🌿 "Control randomness"

### Patient generators {.unnumbered}

### Patient destination/model logic {.unnumbered}

### Outcomes {.unnumbered}

🌿 "Include code to calculate all required model outputs"

🌿 "Ensure clarity and consistency in the model results tables"

🏥 "Data is handled and output in a [Tidy data format](https://medium.com/@kimrodrikwa/untidy-data-a90b6e3ebe4c)."

### Logging {.unnumbered}

🏥 "[Logs](https://nhsdigital.github.io/rap-community-of-practice/training_resources/python/logging-and-error-handling/) are automatically recorded by the pipeline to ensure outputs are as expected."

## Other bits {.unnumbered}

### Warm-up {.unnumbered}

### Multiple replications and parallel processing {.unnumbered}

🌿 "Optimise model run time"

## Analysis {.unnumbered}

🌿 "Provide code for all scenarios and sensitivity analyses "

🌿 "Include code to generate the tables, figures, and other reported results"

🌿 "Save outputs to a file"

🌿 "Avoid excessive output files"

🌿 "Address large file sizes"

🏥 "Outputs are produced by code with minimal manual intervention."

## Good stuff {.unnumbered}

### Docstrings and comments {.unnumbered}

🌿 "Comment sufficiently"

🏥 "Code is well-documented including user guidance, explanation of code structure & methodology and [docstrings](https://nhsdigital.github.io/rap-community-of-practice/training_resources/python/python-functions/#documentation) for functions."

### Linting {.unnumbered}

🏥 "Code adheres to agreed coding standards (e.g PEP8, [style guide for Pyspark](https://nhsdigital.github.io/rap-community-of-practice/training_resources/pyspark/pyspark-style-guide/))."

### Testing {.unnumbered}

🏥 "Pipeline includes a testing framework ([unit tests](https://nhsdigital.github.io/rap-community-of-practice/training_resources/python/unit-testing/), [back tests](https://nhsdigital.github.io/rap-community-of-practice/training_resources/python/backtesting/))."

### GitHub actions {.unnumbered}

🏥 "Repository automatically runs tests etc. via CI/CD or a different integration/deployment tool e.g. [GitHub Actions](https://docs.github.com/en/actions)."

### User guide? {.unnumbered}

🏥 "Code is well-documented including user guidance, explanation of code structure & methodology and [docstrings](https://nhsdigital.github.io/rap-community-of-practice/training_resources/python/python-functions/#documentation) for functions."

### Running everything again {.unnumbered}

🌿 "Ensure model parameters are correct"

### Peer review {.unnumbered}

🏥 "Code has been [peer reviewed](https://nhsdigital.github.io/rap-community-of-practice/implementing_RAP/workflow/code-review/)."

### Sharing and archiving {.unnumbered}

🏥 "Code is [published in the open](https://nhsdigital.github.io/rap-community-of-practice/implementing_RAP/publishing_code/how-to-publish-your-code-in-the-open/) and linked to & from accompanying publication (if relevant)."

## Metadata {.unnumbered}

### Licence {.unnumbered}

🌿 "Share code with an open licence"

### Citation {.unnumbered}

### README {.unnumbered}

🌿 "Include run instructions"

🌿 "State run times and machine specifications"

🏥 "Repository includes a README.md file (or equivalent) that clearly details steps a user must follow to reproduce the code (use [NHS Open Source Policy section on Readmes](https://github.com/nhsx/open-source-policy/blob/main/open-source-policy.md#b-readmes) as a guide)."

🏥 "Code is well-documented including user guidance, explanation of code structure & methodology and [docstrings](https://nhsdigital.github.io/rap-community-of-practice/training_resources/python/python-functions/#documentation) for functions."

### Changelog and releases {.unnumbered}

🌿 "Link publication to a specific version of the code"

🏥 "Changes to the RAP are clearly signposted. E.g. a changelog in the package, releases etc. (See gov.uk info on [Semantic Versioning](https://github.com/alphagov/govuk-frontend/blob/main/docs/contributing/versioning.md))."

## N/A {.unnumbered}

🌿 "Separate model code from applications"

🏥 "Process runs based on event-based triggers (e.g., new data in database) or on a schedule."